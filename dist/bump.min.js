/** MIT License
* 
* Copyright (c) 2011 Ludovic CLUBER 
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* http://bumpjs.lcluber.com
*/

var BUMP={revision:"0.4.1",options:{space:"2D"}};BUMP.Physics={translate:TYPE6.Vector2D.create(),velocity:TYPE6.Vector2D.create(),initialVelocity:TYPE6.Vector2D.create(),gravity:TYPE6.Vector2D.create(),force:TYPE6.Vector2D.create(),impulse:TYPE6.Vector2D.create(),resultingAcc:TYPE6.Vector2D.create(),damping:.8,mass:1,inverseMass:1,elasticity:-1,body:{},collisionSceneId:0,active:!0,damageTaken:0,damageDealt:1,create:function(t,e,i,o,s,r,n,c,a){var h=Object.create(this);return h.initVectors(t),h.mass=e,h.inverseMass=e?1/e:0,h.damping=i,h.elasticity=-o,h.createBody(s,r,n,c,a),h},createBody:function(t,e,i,o,s){switch(t){case"circle":this.body=TYPE6.Geometry.Circle.create(e,i,o);break;case"rectangle":this.body=TYPE6.Geometry.Rectangle.create(e,i,o,s);break;default:return!1}},initVectors:function(t){this.velocity=t,this.initialVelocity=this.velocity.copy(),this.translate=TYPE6.Vector2D.create(),this.gravity=TYPE6.Vector2D.create(),this.force=TYPE6.Vector2D.create(),this.impulse=TYPE6.Vector2D.create(),this.resultingAcc=TYPE6.Vector2D.create()},setActive:function(){this.active=!0},setInactive:function(){this.active=!1},toggleActive:function(){return this.active=!this.active,this.active},isActive:function(){return this.active},updatePosition:function(t){return this.translate.setToOrigin(),this.active&&t>0&&(this.inverseMass&&(this.applyImpulse(),this.applyForces(t)),this.applyVelocity(t)),this.getPosition()},applyForces:function(t){this.resultingAcc.copyTo(this.gravity),this.force.isNotOrigin()&&(this.resultingAcc.addScaledVectorTo(this.force,this.inverseMass),this.force.setToOrigin()),this.resultingAcc.isNotOrigin()&&this.velocity.addScaledVectorTo(this.resultingAcc,t)},applyImpulse:function(){this.impulse.isNotOrigin()&&(this.velocity.addScaledVectorTo(this.impulse,this.inverseMass),this.impulse.setToOrigin())},applyVelocity:function(t){this.velocity.isNotOrigin()&&(this.damping<1&&this.velocity.scaleBy(Math.pow(this.damping,t)),this.translate.copyScaledVectorTo(this.velocity,t),this.body.position.addTo(this.translate))},setPosition:function(t,e){this.body.setPositionXY(t,e)},setVelocity:function(t,e){this.velocity.setXY(t,e)},setGravity:function(t,e){this.gravity.setXY(t,e)},getPosition:function(){return this.body.position},getPositionX:function(){return this.body.getPositionX()},getPositionY:function(){return this.body.getPositionY()},getTranslate:function(){return this.translate},getVelocity:function(){return this.velocity},getVelocityX:function(){return this.velocity.getX()},getVelocityY:function(){return this.velocity.getY()},getForce:function(){return this.force},getResultingAcceleration:function(){return this.resultingAcc},getGravity:function(){return this.gravity},getImpulse:function(){return this.impulse},getRestitution:function(){return this.elasticity},getDamping:function(){return this.damping},getMass:function(){return this.mass},getInverseMass:function(){return this.inverseMass},setDamageDealt:function(t){this.damageDealt=t},applyDamage:function(){if(this.active&&this.damageTaken){var t=this.damageTaken;return this.damageTaken=0,t}return!1},collision:function(t,e){this.inverseMass&&this.impulse.copyTo(t),this.damageTaken||(this.damageTaken=e.damageDealt)},reset:function(){this.velocity.copyTo(this.initialVelocity),this.translate.setToOrigin(),this.force.setToOrigin(),this.impulse.setToOrigin(),this.resultingAcc.setToOrigin()},drawBody:function(t,e,i,o){this.body.draw(t,e,i,o)}},BUMP.Collision={delta:TYPE6.Vector2D.create(),delta2:TYPE6.Vector2D.create(),penetration:TYPE6.Vector2D.create(),contactNormal:TYPE6.Vector2D.create(),correction:TYPE6.Vector2D.create(),vertex:TYPE6.Vector2D.create(),relativeVelocity:TYPE6.Vector2D.create(),voronoi:TYPE6.Vector2D.create(),deltaVelocity:0,totalInverseMass:0,impulse:0,impulsePerInverseMass:TYPE6.Vector2D.create(),k_slop:.01,percent:.8,create:function(){return Object.create(this)},test:function(t,e){this.setDelta(t.getPosition(),e.getPosition()),this.getPenetration(t.body,e.body)&&this.separate(t.getPosition(),t.getInverseMass(),e.getPosition(),e.getInverseMass())&&this.computeImpulseVectors(t,e)},setDelta:function(t,e){this.delta.copySubtractFromTo(t,e)},circleVScircle:function(t){return!!this.circleVScircleHit(t)&&this.circleVScircleProjection(t)},aabbVSaabb:function(t,e){return!!this.aabbVSaabbHit(t,e)&&this.aabbVSaabbProjection()},circleVSaabb:function(t,e,i,o,s){return!!this.aabbVSaabbHit(e,s)&&this.circleVSaabbProjection(t,i,o,s)},getPenetration:function(t,e){if("circle"===t.shape){if("circle"===e.shape)return this.circleVScircle(t.getRadius()+e.getRadius());if("aabb"===e.shape)return this.circleVSaabb(t.getPosition(),t.getHalfSize(),t.getRadius(),e.getPosition(),e.getHalfSize())}else if("aabb"===t.shape){if("circle"===e.shape)return this.circleVSaabb(e.getPosition(),e.getHalfSize(),e.getRadius(),t.getPosition(),t.getHalfSize());if("aabb"===e.shape)return this.aabbVSaabb(t.getHalfSize(),e.getHalfSize())}return!1},aabbVSaabbHit:function(t,e){return this.penetration.copyTo(this.delta),this.penetration.absoluteTo(),this.penetration.oppositeTo(),this.penetration.addTo(t),this.penetration.addTo(e),!!this.penetration.isPositive()},aabbVSaabbProjection:function(){this.penetration.getX()<this.penetration.getY()?this.projectOnX():this.projectOnY()},circleVScircleHit:function(t){return t*t-this.delta.getSquaredMagnitude()>0},circleVScircleProjection:function(t){var e=this.delta.getMagnitude(),i=t-e;return this.penetration.copyScaledVectorTo(this.delta,i/e),!0},setVoronoiRegion:function(t){this.voronoi.setToOrigin();var e=this.delta.getX(),i=this.delta.getY(),o=t.getX(),s=t.getY();e<-o?this.voronoi.setX(-1):e>o&&this.voronoi.setX(1),i<-s?this.voronoi.setY(-1):i>s&&this.voronoi.setY(1)},circleVSaabbProjection:function(t,e,i,o){if(this.setVoronoiRegion(o),0===this.voronoi.getX())return 0===this.voronoi.getY()?(this.penetration.getX()<this.penetration.getY()?this.projectOnX():this.projectOnY(),!0):this.projectOnY();if(0===this.voronoi.getY())return this.projectOnX();this.vertex.copyTo(this.voronoi),this.vertex.multiplyBy(o),this.vertex.addTo(i),this.delta2.copySubtractFromTo(t,this.vertex);var s=this.delta2.getSquaredMagnitude(),r=e*e-s;return r>0&&(s=this.delta2.getMagnitude(),r=e-s,0===s?this.penetration.copyScaledVectorTo(this.voronoi,r/1.41):this.penetration.copyScaledVectorTo(this.delta2,r/s),!0)},projectOnX:function(){return this.penetration.setYToOrigin(),this.delta.getX()<0&&(this.penetration.oppositeXTo(),!0)},projectOnY:function(){return this.penetration.setXToOrigin(),this.delta.getY()<0&&(this.penetration.oppositeYTo(),!0)},separate:function(t,e,i,o){return this.totalInverseMass=e+o,this.computeContactNormal(),this.computeCorrection(),!!this.correction.isNotOrigin()&&(e&&t.addScaledVectorTo(this.correction,e),o&&i.subtractScaledVectorFrom(this.correction,o),!0)},computeCorrection:function(){this.correction.copyTo(this.penetration),this.correction.absoluteTo(),this.correction.subtractScalarFrom(this.k_slop),this.correction.maxScalarTo(0),this.correction.scaleBy(this.percent/this.totalInverseMass),this.correction.multiplyBy(this.contactNormal)},computeImpulseVectors:function(t,e){var i=this.computeSeparatingVelocity(t.getVelocity(),e.getVelocity());i<0&&(i=i*Math.max(t.getRestitution(),e.getRestitution())-i,this.impulse=i/this.totalInverseMass,this.impulsePerInverseMass.copyScaledVectorTo(this.contactNormal,this.impulse),t.collision(this.impulsePerInverseMass,e),this.impulsePerInverseMass.oppositeTo(),e.collision(this.impulsePerInverseMass,t))},computeSeparatingVelocity:function(t,e){return this.relativeVelocity.copySubtractFromTo(t,e),this.relativeVelocity.dotProduct(this.contactNormal)},computeContactNormal:function(){this.contactNormal.copyTo(this.penetration),this.contactNormal.normalizeTo()}},BUMP.Scene={bodies:[],bodiesLength:0,collision:BUMP.Collision.create(),gravity:TYPE6.Vector2D.create(0,400),iteration:1,create:function(){var t=Object.create(this);return t.collision=BUMP.Collision.create(),t.bodies=[],t.gravity=TYPE6.Vector2D.create(0,400),t},addBody:function(t){return!t.physics.collisionSceneId&&(this.bodiesLength++,t.physics.collisionSceneId=this.bodiesLength,this.bodies.push(t),!0)},removeBody:function(){},test:function(){for(var t=0;t<this.iteration;t++)for(var e=0;e<this.bodiesLength;e++){var i=this.bodies[e];if(i.physics.isActive())for(var o=e+1;o<this.bodiesLength;o++){var s=this.bodies[o];s.physics.isActive()&&this.collision.test(i.physics,s.physics)}}},testScene:function(t){for(var e=0;e<this.iteration;e++)for(var i=0;i<this.bodiesLength;i++){var o=this.bodies[i];if(o.physics.isActive())for(var s=0;s<t.bodiesLength;s++){var r=t.bodies[s];r.physics.isActive()&&this.collision.test(o.physics,r.physics)}}},setIteration:function(t){this.iteration=t},getIteration:function(){return this.iteration},setGravity:function(){},getGravity:function(){return this.gravity}};