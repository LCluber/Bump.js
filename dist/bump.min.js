/** MIT License
* 
* Copyright (c) 2011 Ludovic CLUBER 
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* http://bumpjs.lcluber.com
*/
var BUMP={revision:"0.2.5",options:{space:"2D"}};BUMP.Physics={translate:TYPE6.Vector2D.create(),velocity:TYPE6.Vector2D.create(),initialVelocity:TYPE6.Vector2D.create(),gravity:TYPE6.Vector2D.create(),force:TYPE6.Vector2D.create(),impulse:TYPE6.Vector2D.create(),resultingAcc:TYPE6.Vector2D.create(),damping:.8,mass:1,inverseMass:1,elasticity:-1,collisionSceneId:0,damageTaken:0,damageDealt:1,create:function(a,b,c,d){var e=Object.create(this);return e.initVectors(a),e.mass=b,e.inverseMass=b?1/b:0,e.damping=c,e.elasticity=-d,e},initVectors:function(a){this.velocity=a,this.initialVelocity=this.velocity.copy(),this.translate=TYPE6.Vector2D.create(),this.gravity=TYPE6.Vector2D.create(),this.force=TYPE6.Vector2D.create(),this.impulse=TYPE6.Vector2D.create(),this.resultingAcc=TYPE6.Vector2D.create()},setGravity:function(a,b){this.gravity.setXY(a,b)},setPosition:function(a){return this.translate.setToOrigin(),a>0&&(this.resultingAcc.copyTo(this.gravity),this.inverseMass&&this.impulse.isNotOrigin()&&(this.velocity.addScaledVectorTo(this.impulse,this.inverseMass),this.impulse.setToOrigin()),this.inverseMass&&this.force.isNotOrigin()&&(this.resultingAcc.addScaledVectorTo(this.force,this.inverseMass),this.force.setToOrigin()),this.resultingAcc.isNotOrigin()&&this.velocity.addScaledVectorTo(this.resultingAcc,a),this.velocity.isNotOrigin()&&(this.velocity.scaleBy(Math.pow(this.damping,a)),this.translate.copyScaledVectorTo(this.velocity,a))),this.translate},setDamageDealt:function(a){this.damageDealt=a},applyImpulse:function(a){this.velocity.addScaledVectorTo(a,this.inverseMass)},applyDamage:function(){if(this.damageTaken){var a=this.damageTaken;return this.damageTaken=0,a}return!1},collision:function(a,b){this.impulse.copyTo(a),this.damageTaken||(this.damageTaken=b.damageDealt)},reset:function(){this.velocity.copyTo(this.initialVelocity),this.translate.setToOrigin(),this.force.setToOrigin(),this.impulse.setToOrigin(),this.resultingAcc.setToOrigin()}},BUMP.Collision={delta:TYPE6.Vector2D.create(),delta2:TYPE6.Vector2D.create(),penetration:TYPE6.Vector2D.create(),contactNormal:TYPE6.Vector2D.create(),correction:TYPE6.Vector2D.create(),vertex:TYPE6.Vector2D.create(),relativeVelocity:TYPE6.Vector2D.create(),voronoi:TYPE6.Vector2D.create(),deltaVelocity:0,totalInverseMass:0,impulse:0,impulsePerInverseMass:TYPE6.Vector2D.create(),create:function(){var a=Object.create(this);return a},test:function(a,b,c,d){this.setDelta(a.getPosition(),c.getPosition()),this.getPenetration(a,c)&&(this.separate(a.getPosition(),b.inverseMass,c.getPosition(),d.inverseMass),this.computeImpulseVectors(b,d))},setDelta:function(a,b){this.delta.copySubtractFromTo(a,b)},circleVScircle:function(a){return!!this.circleVScircleHit(a)&&this.circleVScircleProjection(a)},aabbVSaabb:function(a,b){return!!this.aabbVSaabbHit(a,b)&&this.aabbVSaabbProjection()},circleVSaabb:function(a,b,c,d,e){return!!this.aabbVSaabbHit(b,e)&&this.circleVSaabbProjection(a,c,d,e)},getPenetration:function(a,b){if("circle"===a.shape){if("circle"===b.shape)return this.circleVScircle(a.getRadius()+b.getRadius());if("aabb"===b.shape)return this.circleVSaabb(a.getPosition(),a.getHalfSize(),a.getRadius(),b.getPosition(),b.getHalfSize())}else if("aabb"===a.shape){if("circle"===b.shape)return this.circleVSaabb(b.getPosition(),b.getHalfSize(),b.getRadius(),a.getPosition(),a.getHalfSize());if("aabb"===b.shape)return this.aabbVSaabb(a.getHalfSize(),b.getHalfSize())}return!1},aabbVSaabbHit:function(a,b){return this.penetration.copyTo(this.delta),this.penetration.absoluteTo(),this.penetration.oppositeTo(),this.penetration.addTo(a),this.penetration.addTo(b),!!this.penetration.isPositive()},aabbVSaabbProjection:function(){this.penetration.getX()<this.penetration.getY()?this.projectOnX():this.projectOnY()},circleVScircleHit:function(a){var b=this.delta.getSquaredMagnitude(),c=a*a;return c-b>0},circleVScircleProjection:function(a){var b=this.delta.getMagnitude(),c=a-b;return this.penetration.copyScaledVectorTo(this.delta,c/b),!0},setVoronoiRegion:function(a){this.voronoi.setToOrigin();var b=this.delta.getX(),c=this.delta.getY(),d=a.getX(),e=a.getY();b<-d?this.voronoi.setX(-1):b>d&&this.voronoi.setX(1),c<-e?this.voronoi.setY(-1):c>e&&this.voronoi.setY(1)},circleVSaabbProjection:function(a,b,c,d){if(this.setVoronoiRegion(d),0===this.voronoi.getX())return 0===this.voronoi.getY()?(this.penetration.getX()<this.penetration.getY()?this.projectOnX():this.projectOnY(),!0):this.projectOnY();if(0===this.voronoi.getY())return this.projectOnX();this.vertex.copyTo(this.voronoi),this.vertex.multiplyBy(d),this.vertex.addTo(c),this.delta2.copySubtractFromTo(a,this.vertex);var e=this.delta2.getSquaredMagnitude(),f=b*b-e;return f>0&&(e=this.delta2.getMagnitude(),f=b-e,0===e?this.penetration.copyScaledVectorTo(this.voronoi,f/1.41):this.penetration.copyScaledVectorTo(this.delta2,f/e),!0)},projectOnX:function(){return this.penetration.setYToOrigin(),this.delta.getX()<0&&(this.penetration.oppositeXTo(),!0)},projectOnY:function(){return this.penetration.setXToOrigin(),this.delta.getY()<0&&(this.penetration.oppositeYTo(),!0)},separate:function(a,b,c,d){this.totalInverseMass=b+d,this.computeContactNormal();var e=.01,f=.2;this.correction.setXY(Math.max(this.penetration.getX()-e,0)/this.totalInverseMass*f*this.contactNormal.getX(),Math.max(this.penetration.getY()-e,0)/this.totalInverseMass*f*this.contactNormal.getY()),b&&a.addScaledVectorTo(this.correction,b/this.totalInverseMass),d&&c.subtractScaledVectorFrom(this.correction,d/this.totalInverseMass)},computeImpulseVectors:function(a,b){var c=this.computeSeparatingVelocity(a.velocity,b.velocity);if(c<0){var d=Math.max(a.elasticity,b.elasticity);c=c*d-c,this.impulse=c/this.totalInverseMass,this.impulsePerInverseMass.copyScaledVectorTo(this.contactNormal,this.impulse),a.collision(this.impulsePerInverseMass,b),this.impulsePerInverseMass.oppositeTo(),b.collision(this.impulsePerInverseMass,a)}},computeSeparatingVelocity:function(a,b){return this.relativeVelocity.copySubtractFromTo(a,b),this.relativeVelocity.dotProduct(this.contactNormal)},computeContactNormal:function(){this.contactNormal.copyTo(this.penetration),this.contactNormal.normalizeTo()}},BUMP.Scene={bodies:[],bodiesLength:0,collision:BUMP.Collision.create(),gravity:TYPE6.Vector2D.create(0,400),create:function(){var a=Object.create(this);return a.collision=BUMP.Collision.create(),a.bodies=[],a.gravity=TYPE6.Vector2D.create(0,400),a},addBody:function(a){return!a.physics.collisionSceneId&&(this.bodiesLength++,a.physics.collisionSceneId=this.bodiesLength,this.bodies.push(a),!0)},removeBody:function(){},test:function(){for(var a=0;a<this.bodiesLength;a++)for(var b=a+1;b<this.bodiesLength;b++){var c=this.bodies[a],d=this.bodies[b];this.collision.test(c.body,c.physics,d.body,d.physics)}},testScene:function(a){for(var b=0;b<this.bodiesLength;b++)for(var c=0;c<a.bodiesLength;c++){var d=this.bodies[b],e=a.bodies[c];this.collision.test(d.body,d.physics,e.body,e.physics)}},setGravity:function(){},getGravity:function(){return this.gravity}};